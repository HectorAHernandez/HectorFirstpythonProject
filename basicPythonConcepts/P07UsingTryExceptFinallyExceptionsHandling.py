# When we have a piece of code that we know that it could fail we can use
# the Try...Except...Finally commands to handle the exception when the error
# occurs instead of allowing the program to abend by itself.
# Note, when using the try...except...finally, the program will finish with
# exit code 0 (successful ending) instead of 1.
# This is useful
# when trying to open a file, if the file is not present in the file's system
# then the program will abend. To implement this, we have to encapsulate the
# code in a "Try" block then create an "Except" block to write the code for
# handling the exception and then create a "Finally" block to execute the codes
# that want to execute not matter if the code in the Try block was successful or
# not.

try:
    with open('hectorTest02NOT.txt', 'r') as colorsFile:
        colorsFile.read()
        print("here any other code related to successful opening the file")

# except:
#     print("Somehow I got into this except block because there was and error")

# to use the exception error detail generated by Python we have to use the
# below except Exception as variableName:
except Exception as errorDetl:
    print("*** The error is: ", errorDetl, "***")

# finally block will ALWAYS be executed whether successful or exception occur
finally:
    print("\"finally\" code is to cleanse resources, cach, or to delete temporary files at")
    print("the end of the process")
